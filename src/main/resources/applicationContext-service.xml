<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	<!-- 把service交给spring管理 -->
	<context:component-scan base-package="com.moudao.service"></context:component-scan>

	<!-- 配置事务平台 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 开启事务注解配置开关 <tx:annotation-driven transaction-manager="transactionManager"/> -->
	<!-- 配置事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 传播行为 -->
			<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="create*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- 配置切面  织入 -->
	<aop:config>
		<!-- 配置切点 -->
		<aop:pointcut expression="execution(* com.moudao.service.*.*(..))" id="mypointcut" />
		<!-- 配置切面 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="mypointcut" />
	</aop:config>

	<!-- 配置定时任务 -->
	<bean id = "cleanBottleChanceTask" class="com.moudao.task.CleanBottleChanceTask"></bean>
	<!-- 配置任务详情 -->
	<bean id = "cleanChanceDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="cleanBottleChanceTask"></property>
		<property name="targetMethod" value="cleanBottle"></property>
		<property name="concurrent" value="false"></property>
	</bean>
	<!-- 配置触发器 -->
	<bean id="cleanChanceTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="cleanChanceDetail"></property>
		<property name="cronExpression" value="0 0 0 * * ? "></property>
		<!-- 为防止开始的时候由于零时的差错，导致没有清理掉昨天的，延迟1分钟启动 -->
		<property name="startDelay" value="60000"></property>
	</bean>
	<!-- 配置调度工长 -->
	<bean id = "schedulerFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cleanChanceTrigger"></ref>
			</list>
		</property>
	</bean>


</beans>
